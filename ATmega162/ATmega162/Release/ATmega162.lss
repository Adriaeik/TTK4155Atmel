
ATmega162.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000154  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000100  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000154  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000184  2**2
                  CONTENTS, READONLY
  4 .debug_info   000005d0  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000580  00000000  00000000  00000790  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000001a  00000000  00000000  00000d10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000001f6  00000000  00000000  00000d2a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
   8:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
   c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  10:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  14:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  18:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  1c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  20:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  24:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  28:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  2c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  30:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  34:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  38:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  3c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  40:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  44:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  48:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__vector_19>
  50:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  54:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  58:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  5c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  60:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  64:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  68:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  6c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61
  7c:	0e 94 5e 00 	call	0xbc	; 0xbc <main>
  80:	0c 94 7e 00 	jmp	0xfc	; 0xfc <_exit>

00000084 <__bad_interrupt>:
  84:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000088 <UART_Init>:
  88:	90 bd       	out	0x20, r25	; 32
  8a:	89 b9       	out	0x09, r24	; 9
  8c:	54 9a       	sbi	0x0a, 4	; 10
  8e:	53 9a       	sbi	0x0a, 3	; 10
  90:	8e e8       	ldi	r24, 0x8E	; 142
  92:	80 bd       	out	0x20, r24	; 32
  94:	08 95       	ret

00000096 <UART_SendChar>:
  96:	5d 9b       	sbis	0x0b, 5	; 11
  98:	fe cf       	rjmp	.-4      	; 0x96 <UART_SendChar>
  9a:	8c b9       	out	0x0c, r24	; 12
  9c:	08 95       	ret

0000009e <UART_EnableReceiveInterrupt>:
  9e:	57 9a       	sbi	0x0a, 7	; 10
  a0:	08 95       	ret

000000a2 <__vector_19>:
  a2:	1f 92       	push	r1
  a4:	0f 92       	push	r0
  a6:	0f b6       	in	r0, 0x3f	; 63
  a8:	0f 92       	push	r0
  aa:	11 24       	eor	r1, r1
  ac:	8f 93       	push	r24
  ae:	8c b1       	in	r24, 0x0c	; 12
  b0:	8f 91       	pop	r24
  b2:	0f 90       	pop	r0
  b4:	0f be       	out	0x3f, r0	; 63
  b6:	0f 90       	pop	r0
  b8:	1f 90       	pop	r1
  ba:	18 95       	reti

000000bc <main>:
  bc:	b8 9a       	sbi	0x17, 0	; 23
  be:	8b e0       	ldi	r24, 0x0B	; 11
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	0e 94 44 00 	call	0x88	; 0x88 <UART_Init>
  c6:	0e 94 4f 00 	call	0x9e	; 0x9e <UART_EnableReceiveInterrupt>
  ca:	78 94       	sei
  cc:	81 e4       	ldi	r24, 0x41	; 65
  ce:	0e 94 4b 00 	call	0x96	; 0x96 <UART_SendChar>
  d2:	c0 9a       	sbi	0x18, 0	; 24
  d4:	2f e3       	ldi	r18, 0x3F	; 63
  d6:	82 e4       	ldi	r24, 0x42	; 66
  d8:	9f e0       	ldi	r25, 0x0F	; 15
  da:	21 50       	subi	r18, 0x01	; 1
  dc:	80 40       	sbci	r24, 0x00	; 0
  de:	90 40       	sbci	r25, 0x00	; 0
  e0:	e1 f7       	brne	.-8      	; 0xda <main+0x1e>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <main+0x28>
  e4:	00 00       	nop
  e6:	c0 98       	cbi	0x18, 0	; 24
  e8:	2f e1       	ldi	r18, 0x1F	; 31
  ea:	81 ea       	ldi	r24, 0xA1	; 161
  ec:	97 e0       	ldi	r25, 0x07	; 7
  ee:	21 50       	subi	r18, 0x01	; 1
  f0:	80 40       	sbci	r24, 0x00	; 0
  f2:	90 40       	sbci	r25, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x32>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x3c>
  f8:	00 00       	nop
  fa:	e8 cf       	rjmp	.-48     	; 0xcc <main+0x10>

000000fc <_exit>:
  fc:	f8 94       	cli

000000fe <__stop_program>:
  fe:	ff cf       	rjmp	.-2      	; 0xfe <__stop_program>
